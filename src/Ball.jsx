/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ball.glb 
*/

import React, { useEffect } from "react";
import { useGLTF, OrthographicCamera } from "@react-three/drei";
import { MeshStandardMaterial } from "three";

export function Model(props) {
  const { nodes, materials } = useGLTF("/ball.glb");

  useEffect(() => {
    // console.log(nodes.Mesh_1001.material);
    // materials.material.transparent = 0.5;
    console.log(nodes.Sphere.material)
    nodes.Sphere.material.opacity = 0.5;
  }, [materials]);

  return (
    <group {...props} dispose={null}>
      <OrthographicCamera
        makeDefault={false}
        far={100000}
        near={0}
        position={[-1.351, -2.231, 9.353]}
        rotation={[0.247, -0.145, 0.036]}
        scale={0.01}
      />
      <mesh
        geometry={nodes.Sphere.geometry}
        material={nodes.Sphere.material}
        position={[0.075, 0.178, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.033}
      >
        <meshStandardMaterial color="red" />
        <ambientLight intensity={0.1} />
      </mesh>
      <mesh
        geometry={nodes.Mesh_1.geometry}
        material={materials.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1001.geometry}
        material={nodes.Mesh_1001.material.clone().color.set('red')}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1002.geometry}
        material={nodes.Mesh_1002.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1003.geometry}
        material={nodes.Mesh_1003.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1004.geometry}
        material={nodes.Mesh_1004.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1005.geometry}
        material={nodes.Mesh_1005.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1006.geometry}
        material={nodes.Mesh_1006.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1007.geometry}
        material={nodes.Mesh_1007.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1008.geometry}
        material={nodes.Mesh_1008.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1009.geometry}
        material={nodes.Mesh_1009.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1010.geometry}
        material={nodes.Mesh_1010.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1011.geometry}
        material={nodes.Mesh_1011.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Mesh_1012.geometry}
        material={nodes.Mesh_1012.material}
        position={[0.07, 0.15, -0.1]}
        rotation={[0, -0.122, 0]}
        scale={0.5}
      />
    </group>
  );
}

useGLTF.preload("/ball.glb");
